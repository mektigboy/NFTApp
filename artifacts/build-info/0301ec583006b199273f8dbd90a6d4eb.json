{
  "id": "0301ec583006b199273f8dbd90a6d4eb",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Random.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.15;\n\n/// @title Random IPFS NFT\n/// @author mektigboy\n/// @notice Generate NFTs with randomness, and store them in a decentralized way.\n/// @dev This contract utilizes Chainlink VRF v2 for randomness. URI points to IPFS.\ncontract Random {}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Random.sol": {
        "Random": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122060e7542f41a1e40f52e71ce35a84f58ecc60a5463d1ecb9629246251e1a2169d64736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE7 SLOAD 0x2F COINBASE LOG1 0xE4 0xF MSTORE 0xE7 SHR 0xE3 GAS DUP5 CREATE2 DUP15 0xCC PUSH1 0xA5 CHAINID RETURNDATASIZE 0x1E 0xCB SWAP7 0x29 0x24 PUSH3 0x51E1A2 AND SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "274:18:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea264697066735822122060e7542f41a1e40f52e71ce35a84f58ecc60a5463d1ecb9629246251e1a2169d64736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE7 SLOAD 0x2F COINBASE LOG1 0xE4 0xF MSTORE 0xE7 SHR 0xE3 GAS DUP5 CREATE2 DUP15 0xCC PUSH1 0xA5 CHAINID RETURNDATASIZE 0x1E 0xCB SWAP7 0x29 0x24 PUSH3 0x51E1A2 AND SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "274:18:0:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"mektigboy\",\"details\":\"This contract utilizes Chainlink VRF v2 for randomness. URI points to IPFS.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Random IPFS NFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Generate NFTs with randomness, and store them in a decentralized way.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Random.sol\":\"Random\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Random.sol\":{\"keccak256\":\"0xd86c9502a276c84ecb5f894761c6f1fefd1941c069982ccbf14b3dbd8958e66c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2f14d43984e54cfd8fb5930147d33997494974de261cb15403e0ebb8a40dad1\",\"dweb:/ipfs/QmYkW2JfE46KUrK7CmuLWrd4sei2xqokjbArLCzYpkYr6J\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/Random.sol": {
        "ast": {
          "absolutePath": "contracts/Random.sol",
          "exportedSymbols": {
            "Random": [
              3
            ]
          },
          "id": 4,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Random",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:216:0",
                "text": "@title Random IPFS NFT\n @author mektigboy\n @notice Generate NFTs with randomness, and store them in a decentralized way.\n @dev This contract utilizes Chainlink VRF v2 for randomness. URI points to IPFS."
              },
              "fullyImplemented": true,
              "id": 3,
              "linearizedBaseContracts": [
                3
              ],
              "name": "Random",
              "nameLocation": "283:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 4,
              "src": "274:18:0",
              "usedErrors": []
            }
          ],
          "src": "32:261:0"
        },
        "id": 0
      }
    }
  }
}
